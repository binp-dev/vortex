from __future__ import annotations

from pathlib import Path

from ferrite.ci.gitlab.generate import Context, TaskJob, ScriptJob, generate_local, default_cache

if __name__ == "__main__":
    from example.components.tree import make_components

    self_dir = Path.cwd()
    ferrite_dir = self_dir.parent
    target_dir = self_dir / "target"

    ctx = Context("example", ferrite_dir)

    components = make_components(ferrite_dir, self_dir, target_dir)
    jobs = [
        TaskJob(components.tasks()["host.all.test"], []),
        ScriptJob("pytest", [f"poetry run python -m pytest"]),
        ScriptJob("mypy", [f"poetry run mypy -p {ctx.module}"], allow_failure=True),
    ]

    print("Generating script ...")
    text = generate_local(
        ctx,
        jobs,
        cache=[default_cache("example_cache", lock_deps=True)],
        includes=[],
    )

    path = ".gitlab-ci.yml"
    print(f"Writing to '{path}' ...")
    with open(path, "w") as f:
        f.write(f"# This file is generated by script '{Path(__file__).relative_to(self_dir)}'\n")
        f.write(text)

    print("Done.")
